{
  "uid" : "b8367ec814d5f6e4",
  "name" : "Verify opening broken link",
  "fullName" : "tests.test_broken_links_images.TestBrokenLinksImages#test_open_broken_link",
  "historyId" : "8dfce3cd830ca00bc5a5a3149ffa9fb6",
  "time" : {
    "start" : 1726686198943,
    "stop" : 1726686200604,
    "duration" : 1661
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: URL-ul așteptat https://the-internet.herokuapp.com/status_codes/500, dar a fost http://the-internet.herokuapp.com/status_codes/500",
  "statusTrace" : "self = <test_broken_links_images.TestBrokenLinksImages object at 0x7f369869b2c0>\n\n    @allure.title(\"Verify opening broken link\")\n    @pytest.mark.smoke\n    def test_open_broken_link(self):\n        self.broken_links_images.open()\n        self.broken_links_images.is_opened()\n        self.broken_links_images.click_broken_link()\n>       self.broken_links_images.check_opened_broken_link()\n\ntests/test_broken_links_images.py:40: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.broken_links_images.BrokenLinksImages object at 0x7f36986eb1d0>\n\n    @allure.step(\"Verify if link is broken\")\n    def check_opened_broken_link(self):\n        current_url = self.driver.current_url\n        expected_url = self.broken_link_href\n>       assert expected_url == current_url, f\"URL-ul așteptat {expected_url}, dar a fost {current_url}\"\nE       AssertionError: URL-ul așteptat https://the-internet.herokuapp.com/status_codes/500, dar a fost http://the-internet.herokuapp.com/status_codes/500\n\npages/broken_links_images.py:67: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "driver",
    "time" : {
      "start" : 1726686198571,
      "stop" : 1726686198898,
      "duration" : 327
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1726686179812,
      "stop" : 1726686179891,
      "duration" : 79
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "setup",
    "time" : {
      "start" : 1726686198898,
      "stop" : 1726686198942,
      "duration" : 44
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: URL-ul așteptat https://the-internet.herokuapp.com/status_codes/500, dar a fost http://the-internet.herokuapp.com/status_codes/500",
    "statusTrace" : "self = <test_broken_links_images.TestBrokenLinksImages object at 0x7f369869b2c0>\n\n    @allure.title(\"Verify opening broken link\")\n    @pytest.mark.smoke\n    def test_open_broken_link(self):\n        self.broken_links_images.open()\n        self.broken_links_images.is_opened()\n        self.broken_links_images.click_broken_link()\n>       self.broken_links_images.check_opened_broken_link()\n\ntests/test_broken_links_images.py:40: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.broken_links_images.BrokenLinksImages object at 0x7f36986eb1d0>\n\n    @allure.step(\"Verify if link is broken\")\n    def check_opened_broken_link(self):\n        current_url = self.driver.current_url\n        expected_url = self.broken_link_href\n>       assert expected_url == current_url, f\"URL-ul așteptat {expected_url}, dar a fost {current_url}\"\nE       AssertionError: URL-ul așteptat https://the-internet.herokuapp.com/status_codes/500, dar a fost http://the-internet.herokuapp.com/status_codes/500\n\npages/broken_links_images.py:67: AssertionError",
    "steps" : [ {
      "name" : "Open https://demoqa.com/broken page",
      "time" : {
        "start" : 1726686198943,
        "stop" : 1726686200311,
        "duration" : 1368
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Page https://demoqa.com/broken is opened",
      "time" : {
        "start" : 1726686200311,
        "stop" : 1726686200314,
        "duration" : 3
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Click on broken link",
      "time" : {
        "start" : 1726686200314,
        "stop" : 1726686200601,
        "duration" : 287
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Check if element located by ('xpath', \"//a[text()='Click Here for Broken Link']\") is clickable",
        "time" : {
          "start" : 1726686200328,
          "stop" : 1726686200347,
          "duration" : 19
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "stepsCount" : 0,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 1,
      "hasContent" : true
    }, {
      "name" : "Verify if link is broken",
      "time" : {
        "start" : 1726686200601,
        "stop" : 1726686200604,
        "duration" : 3
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: URL-ul așteptat https://the-internet.herokuapp.com/status_codes/500, dar a fost http://the-internet.herokuapp.com/status_codes/500\n",
      "statusTrace" : "  File \"/usr/local/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/usr/workspace/pages/broken_links_images.py\", line 67, in check_opened_broken_link\n    assert expected_url == current_url, f\"URL-ul așteptat {expected_url}, dar a fost {current_url}\"\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "stepsCount" : 0,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "stepsCount" : 5,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "driver::0",
    "time" : {
      "start" : 1726686200608,
      "stop" : 1726686200668,
      "duration" : 60
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "Elements - Links"
  }, {
    "name" : "tag",
    "value" : "smoke"
  }, {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "test_broken_links_images"
  }, {
    "name" : "subSuite",
    "value" : "TestBrokenLinksImages"
  }, {
    "name" : "host",
    "value" : "6f1294acaf7d"
  }, {
    "name" : "thread",
    "value" : "1-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_broken_links_images"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "smoke" ]
  },
  "source" : "b8367ec814d5f6e4.json",
  "parameterValues" : [ ]
}